// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ActiveWalletChangedEvent extends ethereum.Event {
  get params(): ActiveWalletChangedEvent__Params {
    return new ActiveWalletChangedEvent__Params(this);
  }
}

export class ActiveWalletChangedEvent__Params {
  _event: ActiveWalletChangedEvent;

  constructor(event: ActiveWalletChangedEvent) {
    this._event = event;
  }

  get walletAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class WalletCreatedEvent extends ethereum.Event {
  get params(): WalletCreatedEvent__Params {
    return new WalletCreatedEvent__Params(this);
  }
}

export class WalletCreatedEvent__Params {
  _event: WalletCreatedEvent;

  constructor(event: WalletCreatedEvent) {
    this._event = event;
  }

  get walletAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): i32 {
    return this._event.parameters[2].value.toI32();
  }
}

export class WalletRegistry extends ethereum.SmartContract {
  static bind(address: Address): WalletRegistry {
    return new WalletRegistry("WalletRegistry", address);
  }

  activeWallet(param0: Address): Address {
    let result = super.call("activeWallet", "activeWallet(address):(address)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toAddress();
  }

  try_activeWallet(param0: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "activeWallet",
      "activeWallet(address):(address)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  activeWalletId(param0: Address): i32 {
    let result = super.call(
      "activeWalletId",
      "activeWalletId(address):(uint8)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toI32();
  }

  try_activeWalletId(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "activeWalletId",
      "activeWalletId(address):(uint8)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  createWallet(): Address {
    let result = super.call("createWallet", "createWallet():(address)", []);

    return result[0].toAddress();
  }

  try_createWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("createWallet", "createWallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  setActiveWallet(id: i32): Address {
    let result = super.call(
      "setActiveWallet",
      "setActiveWallet(uint8):(address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(id))]
    );

    return result[0].toAddress();
  }

  try_setActiveWallet(id: i32): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "setActiveWallet",
      "setActiveWallet(uint8):(address)",
      [ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(id))]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  wallets(param0: Address, param1: BigInt): Address {
    let result = super.call("wallets", "wallets(address,uint256):(address)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromUnsignedBigInt(param1)
    ]);

    return result[0].toAddress();
  }

  try_wallets(param0: Address, param1: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "wallets",
      "wallets(address,uint256):(address)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _epochBase(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenRegistry(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _paymentToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _gasOracle(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _version(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateWalletCall extends ethereum.Call {
  get inputs(): CreateWalletCall__Inputs {
    return new CreateWalletCall__Inputs(this);
  }

  get outputs(): CreateWalletCall__Outputs {
    return new CreateWalletCall__Outputs(this);
  }
}

export class CreateWalletCall__Inputs {
  _call: CreateWalletCall;

  constructor(call: CreateWalletCall) {
    this._call = call;
  }
}

export class CreateWalletCall__Outputs {
  _call: CreateWalletCall;

  constructor(call: CreateWalletCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetActiveWalletCall extends ethereum.Call {
  get inputs(): SetActiveWalletCall__Inputs {
    return new SetActiveWalletCall__Inputs(this);
  }

  get outputs(): SetActiveWalletCall__Outputs {
    return new SetActiveWalletCall__Outputs(this);
  }
}

export class SetActiveWalletCall__Inputs {
  _call: SetActiveWalletCall;

  constructor(call: SetActiveWalletCall) {
    this._call = call;
  }

  get id(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class SetActiveWalletCall__Outputs {
  _call: SetActiveWalletCall;

  constructor(call: SetActiveWalletCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateWalletParamsCall extends ethereum.Call {
  get inputs(): UpdateWalletParamsCall__Inputs {
    return new UpdateWalletParamsCall__Inputs(this);
  }

  get outputs(): UpdateWalletParamsCall__Outputs {
    return new UpdateWalletParamsCall__Outputs(this);
  }
}

export class UpdateWalletParamsCall__Inputs {
  _call: UpdateWalletParamsCall;

  constructor(call: UpdateWalletParamsCall) {
    this._call = call;
  }

  get _epochBase(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenRegistry(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _paymentToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _gasOracle(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _version(): string {
    return this._call.inputValues[5].value.toString();
  }
}

export class UpdateWalletParamsCall__Outputs {
  _call: UpdateWalletParamsCall;

  constructor(call: UpdateWalletParamsCall) {
    this._call = call;
  }
}

// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ExpireJobEvent extends ethereum.Event {
  get params(): ExpireJobEvent__Params {
    return new ExpireJobEvent__Params(this);
  }
}

export class ExpireJobEvent__Params {
  _event: ExpireJobEvent;

  constructor(event: ExpireJobEvent) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class JobExecutionEvent extends ethereum.Event {
  get params(): JobExecutionEvent__Params {
    return new JobExecutionEvent__Params(this);
  }
}

export class JobExecutionEvent__Params {
  _event: JobExecutionEvent;

  constructor(event: JobExecutionEvent) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get success(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get isExpired(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get nextExecution(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[4].value.toBytes();
  }
}

export class JobInfoEvent extends ethereum.Event {
  get params(): JobInfoEvent__Params {
    return new JobInfoEvent__Params(this);
  }
}

export class JobInfoEvent__Params {
  _event: JobInfoEvent;

  constructor(event: JobInfoEvent) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get executionInterval(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get strictExecution(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get jobInfoData(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class JobParamsEvent extends ethereum.Event {
  get params(): JobParamsEvent__Params {
    return new JobParamsEvent__Params(this);
  }
}

export class JobParamsEvent__Params {
  _event: JobParamsEvent;

  constructor(event: JobParamsEvent) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get initiatorAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get executionContract(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get functionSignature(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }

  get tokensInvolved(): Array<Address> {
    return this._event.parameters[4].value.toAddressArray();
  }

  get data(): Bytes {
    return this._event.parameters[5].value.toBytes();
  }
}

export class MetaTransactionExecuted extends ethereum.Event {
  get params(): MetaTransactionExecuted__Params {
    return new MetaTransactionExecuted__Params(this);
  }
}

export class MetaTransactionExecuted__Params {
  _event: MetaTransactionExecuted;

  constructor(event: MetaTransactionExecuted) {
    this._event = event;
  }

  get userAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get relayerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get functionSignature(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class EpochBase__jobInfoResult {
  value0: BigInt;
  value1: string;
  value2: BigInt;
  value3: boolean;
  value4: i32;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: boolean;
  value9: boolean;
  value10: boolean;

  constructor(
    value0: BigInt,
    value1: string,
    value2: BigInt,
    value3: boolean,
    value4: i32,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: boolean,
    value9: boolean,
    value10: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set(
      "value4",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value4))
    );
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromBoolean(this.value8));
    map.set("value9", ethereum.Value.fromBoolean(this.value9));
    map.set("value10", ethereum.Value.fromBoolean(this.value10));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getName(): string {
    return this.value1;
  }

  getCreatedTimestamp(): BigInt {
    return this.value2;
  }

  getIsSmartContractWallet(): boolean {
    return this.value3;
  }

  getJobType(): i32 {
    return this.value4;
  }

  getInitTimestamp(): BigInt {
    return this.value5;
  }

  getExecutionInterval(): BigInt {
    return this.value6;
  }

  getNextExecutionDeadline(): BigInt {
    return this.value7;
  }

  getStrictExecution(): boolean {
    return this.value8;
  }

  getRunOnce(): boolean {
    return this.value9;
  }

  getIsExpired(): boolean {
    return this.value10;
  }
}

export class EpochBase__jobParamsResult {
  value0: BigInt;
  value1: Address;
  value2: Address;
  value3: Bytes;
  value4: Bytes;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: Address,
    value3: Bytes,
    value4: Bytes
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromFixedBytes(this.value3));
    map.set("value4", ethereum.Value.fromBytes(this.value4));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getInitiatorAddress(): Address {
    return this.value1;
  }

  getExecutionContract(): Address {
    return this.value2;
  }

  getFunctionSignature(): Bytes {
    return this.value3;
  }

  getData(): Bytes {
    return this.value4;
  }
}

export class EpochBase extends ethereum.SmartContract {
  static bind(address: Address): EpochBase {
    return new EpochBase("EpochBase", address);
  }

  getNonce(user: Address): BigInt {
    let result = super.call("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);

    return result[0].toBigInt();
  }

  try_getNonce(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getNonce", "getNonce(address):(uint256)", [
      ethereum.Value.fromAddress(user)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  jobCounter(): BigInt {
    let result = super.call("jobCounter", "jobCounter():(uint256)", []);

    return result[0].toBigInt();
  }

  try_jobCounter(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("jobCounter", "jobCounter():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  jobInfo(param0: BigInt): EpochBase__jobInfoResult {
    let result = super.call(
      "jobInfo",
      "jobInfo(uint256):(uint256,string,uint256,bool,uint8,uint256,uint256,uint256,bool,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new EpochBase__jobInfoResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toBigInt(),
      result[3].toBoolean(),
      result[4].toI32(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBoolean(),
      result[9].toBoolean(),
      result[10].toBoolean()
    );
  }

  try_jobInfo(param0: BigInt): ethereum.CallResult<EpochBase__jobInfoResult> {
    let result = super.tryCall(
      "jobInfo",
      "jobInfo(uint256):(uint256,string,uint256,bool,uint8,uint256,uint256,uint256,bool,bool,bool)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EpochBase__jobInfoResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toBigInt(),
        value[3].toBoolean(),
        value[4].toI32(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBoolean(),
        value[9].toBoolean(),
        value[10].toBoolean()
      )
    );
  }

  jobParams(param0: BigInt): EpochBase__jobParamsResult {
    let result = super.call(
      "jobParams",
      "jobParams(uint256):(uint256,address,address,bytes4,bytes)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new EpochBase__jobParamsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBytes(),
      result[4].toBytes()
    );
  }

  try_jobParams(
    param0: BigInt
  ): ethereum.CallResult<EpochBase__jobParamsResult> {
    let result = super.tryCall(
      "jobParams",
      "jobParams(uint256):(uint256,address,address,bytes4,bytes)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EpochBase__jobParamsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBytes(),
        value[4].toBytes()
      )
    );
  }

  jobs(param0: BigInt): BigInt {
    let result = super.call("jobs", "jobs(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toBigInt();
  }

  try_jobs(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("jobs", "jobs(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  protocolModules(param0: Address): string {
    let result = super.call(
      "protocolModules",
      "protocolModules(address):(string)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toString();
  }

  try_protocolModules(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall(
      "protocolModules",
      "protocolModules(address):(string)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get version(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddJobCall extends ethereum.Call {
  get inputs(): AddJobCall__Inputs {
    return new AddJobCall__Inputs(this);
  }

  get outputs(): AddJobCall__Outputs {
    return new AddJobCall__Outputs(this);
  }
}

export class AddJobCall__Inputs {
  _call: AddJobCall;

  constructor(call: AddJobCall) {
    this._call = call;
  }

  get _jobInfo(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _jobParams(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class AddJobCall__Outputs {
  _call: AddJobCall;

  constructor(call: AddJobCall) {
    this._call = call;
  }
}

export class ExecuteJobCall extends ethereum.Call {
  get inputs(): ExecuteJobCall__Inputs {
    return new ExecuteJobCall__Inputs(this);
  }

  get outputs(): ExecuteJobCall__Outputs {
    return new ExecuteJobCall__Outputs(this);
  }
}

export class ExecuteJobCall__Inputs {
  _call: ExecuteJobCall;

  constructor(call: ExecuteJobCall) {
    this._call = call;
  }

  get jobId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExecuteJobCall__Outputs {
  _call: ExecuteJobCall;

  constructor(call: ExecuteJobCall) {
    this._call = call;
  }
}

export class ExecuteMetaTransactionCall extends ethereum.Call {
  get inputs(): ExecuteMetaTransactionCall__Inputs {
    return new ExecuteMetaTransactionCall__Inputs(this);
  }

  get outputs(): ExecuteMetaTransactionCall__Outputs {
    return new ExecuteMetaTransactionCall__Outputs(this);
  }
}

export class ExecuteMetaTransactionCall__Inputs {
  _call: ExecuteMetaTransactionCall;

  constructor(call: ExecuteMetaTransactionCall) {
    this._call = call;
  }

  get userAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get functionSignature(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get sigR(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get sigS(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get sigV(): i32 {
    return this._call.inputValues[4].value.toI32();
  }
}

export class ExecuteMetaTransactionCall__Outputs {
  _call: ExecuteMetaTransactionCall;

  constructor(call: ExecuteMetaTransactionCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class ExpireJobCall extends ethereum.Call {
  get inputs(): ExpireJobCall__Inputs {
    return new ExpireJobCall__Inputs(this);
  }

  get outputs(): ExpireJobCall__Outputs {
    return new ExpireJobCall__Outputs(this);
  }
}

export class ExpireJobCall__Inputs {
  _call: ExpireJobCall;

  constructor(call: ExpireJobCall) {
    this._call = call;
  }

  get jobId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExpireJobCall__Outputs {
  _call: ExpireJobCall;

  constructor(call: ExpireJobCall) {
    this._call = call;
  }
}
